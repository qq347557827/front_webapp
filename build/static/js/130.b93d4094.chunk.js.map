{"version":3,"file":"static/js/130.b93d4094.chunk.js","mappings":"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","sources":["pages/login/login/index.js"],"sourcesContent":["import './index.scss'\nimport { connect } from 'react-redux'\nimport { Card, NavBar, Form, Button, Input, Toast } from 'antd-mobile'\nimport { useHistory } from 'react-router-dom'\nimport { useEffect, useState } from 'react'\n// eslint-disable-next-line no-unused-vars\nimport { getCaptcha, login } from '@/api/user'\n\nfunction Login(props) {\n  const { sendLogin } = props\n  const history = useHistory()\n  const [captchaSvg, setCaptchaSvg] = useState()\n  const [username, setUsername] = useState()\n  const [password, setPassword] = useState()\n  const [code, setCode] = useState()\n  const back = () => {\n    history.go(-1)\n  }\n\n  const captcha = () => {\n    getCaptcha(props.userState.sid).then((res) => {\n      console.log(' %c üê±‚Äçüèç props: ', 'font-size:20px;background-color: #42b983;color:#fff;', props)\n      console.log(' %c üê±‚Äçüèç res: ', 'font-size:20px;background-color: #42b983;color:#fff;', res)\n      if (res.data.code === 200) {\n        setCaptchaSvg(res.data.data)\n      } else {\n        setCaptchaSvg('È™åËØÅÁ†ÅÂä†ËΩΩÂ§±Ë¥•,‰∫≤ÈáçËØï')\n      }\n    })\n  }\n  const submitForm = () => {\n    console.log(' %c üê±‚Äçüèç username: ', 'font-size:20px;background-color: #42b983;color:#fff;', username, password, code)\n    sendLogin({\n      username,\n      password,\n      code,\n      sid: props.userState.sid,\n    })\n      .then((res) => {\n        console.log(' %c üê±‚Äçüèç res: ', 'font-size:20px;background-color: #42b983;color:#fff;', res)\n        if (res.data.code === 200) {\n          Toast.show({\n            icon: 'success',\n            content: 'ÁôªÈåÑÊàêÂäü',\n            afterClose: () => {\n              history.go(-1)\n            },\n          })\n        } else if (res.data.code === 401) {\n          Toast.show({\n            icon: 'success',\n            content: 'È©óË≠âÁ¢ºÈåØË™§',\n          })\n        } else {\n          Toast.show({\n            icon: 'success',\n            content: 'Áî®Êà∑ÂêçÊàñËÄÖÂØÜÁ†ÅÈîôËØØ',\n          })\n        }\n      })\n      .catch((err) => {\n        console.log(' %c üê±‚Äçüèç err: ', 'font-size:20px;background-color: #42b983;color:#fff;', err)\n        Toast.show({\n          content: 'ÊúçÂä°Âô®ÈîôËØØÔºåËØ∑ÈáçËØï',\n        })\n      })\n  }\n\n  useEffect(() => {\n    captcha()\n  }, [])\n  return (\n    <div className={'login'}>\n      <NavBar onBack={back} style={{ '--border-bottom': '1px solid #eeeeee' }} />\n      <Card>\n        <div>\n          <Form\n            name=\"form\"\n            layout=\"horizontal\"\n            onFinish={submitForm}\n            footer={\n              <Button block type=\"submit\" color=\"primary\" size=\"large\">\n                Êèê‰∫§\n              </Button>\n            }\n          >\n            <Form.Header>ËØ∑ÁôªÂΩïÁî®Êà∑</Form.Header>\n            <Form.Item label=\"Ë¥¶Âè∑\" name=\"username\" rules={formRules.username}>\n              <Input value={username} onChange={(val) => setUsername(val)} placeholder=\"ËØ∑ËæìÂÖ•ÂßìÂêç\" />\n            </Form.Item>\n            <Form.Item label=\"ÂØÜÁ†Å\" name=\"password\" rules={formRules.password}>\n              <Input value={password} type={'password'} onChange={(val) => setPassword(val)} placeholder=\"ËØ∑ËæìÂÖ•ÂØÜÁ†Å\" />\n            </Form.Item>\n            <Form.Item label=\"È™åËØÅÁ†Å\" name=\"code\" rules={formRules.code}>\n              <Input value={code} onChange={(val) => setCode(val)} placeholder=\"ËØ∑ËæìÂÖ•È™åËØÅÁ†Å\" />\n            </Form.Item>\n            <div\n              style={{ height: '38px', marginLeft: '114px' }}\n              dangerouslySetInnerHTML={{ __html: captchaSvg }}\n              onClick={captcha}\n            />\n          </Form>\n        </div>\n      </Card>\n    </div>\n  )\n}\nconst formRules = {\n  username: [{ required: true, message: 'Ë¥¶Âè∑‰∏çËÉΩ‰∏∫Á©∫' }],\n  password: [{ required: true, message: 'ÂØÜÁ†Å‰∏çËÉΩ‰∏∫Á©∫' }],\n  code: [{ required: true, message: 'È™åËØÅÁ†Å‰∏çËÉΩ‰∏∫Á©∫' }],\n}\nconst mapStateToProps = (state) => state\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    sendLogin: (data) => {\n      return new Promise((resolve, reject) => {\n        dispatch({\n          type: 'submit_login',\n          payload: {\n            data,\n            resolve,\n            reject,\n          },\n        })\n      })\n    },\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n"],"names":["formRules","username","required","message","password","code","connect","state","dispatch","sendLogin","data","Promise","resolve","reject","type","payload","props","history","useHistory","useState","captchaSvg","setCaptchaSvg","setUsername","setPassword","setCode","captcha","getCaptcha","userState","sid","then","res","console","log","useEffect","className","onBack","go","style","name","layout","onFinish","Toast","icon","content","afterClose","catch","err","footer","block","color","size","label","rules","value","onChange","val","placeholder","height","marginLeft","dangerouslySetInnerHTML","__html","onClick"],"sourceRoot":""}