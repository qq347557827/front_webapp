{"version":3,"file":"static/js/957.a548b658.chunk.js","mappings":"mQAmDA,MA9CA,SAAiBA,GACf,IAAMC,GAAUC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,SAASH,WACtD,OACE,gBAAKI,UAAU,WAAf,UACE,SAAC,KAAD,CAAMC,OAAO,2BAAb,SACGL,EAAQM,KAAI,SAACC,GAAD,MACM,YAAjBA,EAAKC,SACH,SAAC,UAAD,CAEEC,QACE,SAAC,KAAD,CACEC,IAAKC,EAAAA,EAAUJ,EAAKK,QAAQC,IAC5BC,MAAO,CAAEC,aAAc,IACvBC,IAAI,QACJC,MAAO,GACPC,OAAQ,KAGZC,YAAaZ,EAAKa,IAXpB,UAaE,iBAAKhB,UAAU,eAAf,WACE,gBAAKA,UAAU,oBAAf,SAAoCG,EAAKK,QAAQS,QACjD,yBAAMd,EAAKe,WAAY,SAAC,KAAD,CAAOC,QAAShB,EAAKe,SAAUR,MAAO,CAAEU,YAAa,gBAdzEjB,EAAKkB,MAkBZ,SAAC,UAAD,CAEEhB,QAAQ,SAACiB,EAAA,EAAD,CAAaC,SAAU,GAAIC,MAAM,2BAA2Bd,MAAO,CAAEG,MAAO,UACpFE,YAAaZ,EAAKsB,WAAWN,QAH/B,UAKE,iBAAKnB,UAAU,eAAf,WACE,iBAAKA,UAAU,oBAAf,WACE,0BAAOG,EAAKK,QAAQS,QACpB,iBAAMP,MAAO,CAAEa,SAAU,OAAQG,WAAY,OAAQF,MAAO,QAA5D,4DAEF,yBAAMrB,EAAKe,WAAY,SAAC,KAAD,CAAOC,QAAShB,EAAKe,SAAUR,MAAO,CAAEU,YAAa,gBATzEjB,EAAKkB,aCYxB,MAjCA,WACE,IAAMM,GAAa9B,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAM8B,SAASD,cACnDE,GAAWC,EAAAA,EAAAA,MAgBjB,OAfAC,EAAAA,EAAAA,YAAU,WACRF,EAAS,CAAEG,KAAM,mBAChB,KACHD,EAAAA,EAAAA,YAAU,YACRE,EAAAA,EAAAA,oBAAmBN,KAClB,CAACA,KAWF,4BAEE,SAAC,EAAD,KACA,iBAAKO,QAASC,EAAAA,aAAcnC,UAAU,UAAtC,UACG,IADH,aAIA,gBAAKA,UAAW,WAAhB,UACE,SAAC,EAAAoC,OAAD,CAAQC,gBAAgB,EAAMC,qBAlBP,SAACC,GAC5BC,QAAQC,IAAR,gCAAqCF,IAGrCG,EAAAA,EAAAA,KAAY,CACVC,MAAO,UACPC,QAASL","sources":["pages/message/childComps/msgList.js","pages/message/index.js"],"sourcesContent":["import { Badge, Image, List } from 'antd-mobile'\nimport { useSelector } from 'react-redux'\nimport { baseURL } from '@/config'\nimport { BellOutline } from 'antd-mobile-icons'\n\nfunction MsgList(props) {\n  const msgList = useSelector((state) => state.msgState.msgList)\n  return (\n    <div className=\"msg-list\">\n      <List header=\"消息列表\">\n        {msgList.map((item) =>\n          item.msgType === 'chatMsg' ? (\n            <List.Item\n              key={item._id}\n              prefix={\n                <Image\n                  src={baseURL + item.fromUid.pic}\n                  style={{ borderRadius: 20 }}\n                  fit=\"cover\"\n                  width={40}\n                  height={40}\n                />\n              }\n              description={item.msg}\n            >\n              <div className=\"msg-item-top\">\n                <div className=\"msg-item-top-name\">{item.fromUid.name}</div>\n                <div>{item.isReaded && <Badge content={item.isReaded} style={{ marginRight: 'auto' }} />}</div>\n              </div>\n            </List.Item>\n          ) : (\n            <List.Item\n              key={item._id}\n              prefix={<BellOutline fontSize={28} color=\"var(--adm-color-primary)\" style={{ width: '40px' }} />}\n              description={item.comment_id.content}\n            >\n              <div className=\"msg-item-top\">\n                <div className=\"msg-item-top-name\">\n                  <span>{item.fromUid.name}</span>\n                  <span style={{ fontSize: '12px', marginLeft: '12px', color: '#666' }}>点赞了你的评论</span>\n                </div>\n                <div>{item.isReaded && <Badge content={item.isReaded} style={{ marginRight: 'auto' }} />}</div>\n              </div>\n            </List.Item>\n          ),\n        )}\n      </List>\n    </div>\n  )\n}\n\nexport default MsgList\n","import { addResponseMessage, Widget, toggleWidget } from 'react-chat-widget'\nimport 'react-chat-widget/lib/styles.css'\nimport './index.scss'\nimport { useEffect } from 'react'\nimport socket from '@/libs/sock'\nimport { useDispatch, useSelector, connect } from 'react-redux'\n// import { SEND_COMMENT_VAL } from '@/config/actionTypes'\nimport { List, NavBar } from 'antd-mobile'\nimport { ListItem } from 'antd-mobile/es/components/list/list-item'\nimport MsgList from '@p/message/childComps/msgList'\n\nfunction Message() {\n  const newChatMsg = useSelector((state) => state.appState.newChatMsg)\n  const dispatch = useDispatch()\n  useEffect(() => {\n    dispatch({ type: 'get_msg_list' })\n  }, [])\n  useEffect(() => {\n    addResponseMessage(newChatMsg)\n  }, [newChatMsg])\n  const handleNewUserMessage = (newMessage) => {\n    console.log(`New message incoming! ${newMessage}`)\n    // Now send the message throught the backend API\n    const response = '这是一条新消息'\n    socket.json({\n      event: 'chatMsg',\n      message: newMessage,\n    })\n  }\n  return (\n    <div>\n      {/*<NavBar style={{ backgroundColor: '#fff', '--border-bottom': '1px #eee solid' }}>消息列表</NavBar>*/}\n      <MsgList />\n      <div onClick={toggleWidget} className=\"che-shi\">\n        {' '}\n        sdfsdf\n      </div>\n      <div className={'chat-box'}>\n        <Widget fullScreenMode={true} handleNewUserMessage={handleNewUserMessage} />\n      </div>\n    </div>\n  )\n}\n// mapDispatchToProps\nexport default Message\n// export default connect(null, mapDispatchToProps)(Message)\n"],"names":["props","msgList","useSelector","state","msgState","className","header","map","item","msgType","prefix","src","baseURL","fromUid","pic","style","borderRadius","fit","width","height","description","msg","name","isReaded","content","marginRight","_id","BellOutline","fontSize","color","comment_id","marginLeft","newChatMsg","appState","dispatch","useDispatch","useEffect","type","addResponseMessage","onClick","toggleWidget","Widget","fullScreenMode","handleNewUserMessage","newMessage","console","log","socket","event","message"],"sourceRoot":""}